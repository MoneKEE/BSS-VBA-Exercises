Attribute VB_Name = "modQuestion2"
'*************************************************************
' Question 2
'
' Revision History
' Date       Developer       Description
' 03-Nov-18  M Gore          Initial Version
'
' Create a function that uses the Windows API to get the
' computer’s name and return it as a string.  A ptrSafe
' version of kernel32 is declared when function is called
' on a 64 bit system.
'*************************************************************

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Error Message Templates
' These constants are used to standardize error message format
' throughout the module.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Private Const gERRORMSGGENERIC   As String = "@ErrDesc (@ErrNum) " & vbCrLf & "Module:@Module" & vbCrLf & "Function:@Function"
Private Const gERRORTEXT1        As String = "Could not retrieve NetBIOS name for local computer."
Private Const gINFORMATION       As String = "Information"

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Test Mode flag
' For testing/debugging set gTestMode = True to print error message
' information to the Immediate Pane.  When False, error information
' is displayed in a message box.
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Private Const gTestMode As Boolean = True

'''''''''''''''''''''''''''
' Used for error handling
'''''''''''''''''''''''''''
Private Const mModuleName = "Question 2"

''''''''''''''''''''''''''''''''''''''''''''''''''''
' Declare a ptrsafe version of GetComputerName for
' operation on 64bit machines.
''''''''''''''''''''''''''''''''''''''''''''''''''''
#If VBA7 Then
    Private Declare PtrSafe Function GetComputerName Lib "kernel32" _
    Alias "GetComputerNameA" (ByVal lpBuffer As String, nSize As Long) As Long
#Else
    Private Declare Function GetComputerName Lib "kernel32" _
    Alias "GetComputerNameA" (ByVal lpBuffer As String, nSize As Long) As Long
#End If

Public Function ComputerName() As String
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' ComputerName
' This function uses the GetComputerName function to
' return the NetBIOS name of the local computer.
'
' The NetBIOS name is placed within lpBuffer.
' nSize represents the number of characters to send to lpBuffer.
' GetComputerName returns 1 if successful, otherwise 0.
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    Dim lResult As Long
    Dim sBuffer As String
    Dim sErrMsg As String
    Dim sErrNum As String
    Dim sErrDesc As String
    Dim sFunctionName As String
    
    sFunctionName = "ComputerName"
    
    On Error GoTo Catch
    
    ''''''''''''''''''''''''''''''''''''
    ' Set buffer size large enough to
    ' handle a computer name of 255
    ' characters of less.
    ''''''''''''''''''''''''''''''''''''
    sBuffer = Space(255)
    lResult = GetComputerName(sBuffer, 255)
    
    ''''''''''''''''''''''''''''''''''''''''''''''''''''
    ' Read the leftmost characters of the resulting
    ' string until the first null character is reached.
    ' If lResult = 0, then raise a runtime error.
    ''''''''''''''''''''''''''''''''''''''''''''''''''''
    If lResult <> 0 Then
        ComputerName = Left(sBuffer, InStr(sBuffer, Chr(0)) - 1)
    Else
        Err.Raise Err.LastDllError, , gERRORTEXT1
    End If
    
    Exit Function
Catch:
    sErrNum = Err.Number
    sErrDesc = Err.Description
    sErrMsg = CreateGenericErrMsg(sErrNum, sErrDesc, mModuleName, sFunctionName)
    DisplayMessage sErrMsg, vbCritical
End Function

Private Function CreateGenericErrMsg(sErrNumber As String, sErrDescription As String, sModule As String, sFunction As String, Optional sAddtlMsg As String) As String
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' CreateGenericErrMsg
' This function accepts the error number, the error description,
' the module and function where the error was raised, as well as
' the sheetname and additional information, if applicable.  It
' returns a formatted error message, ready for display.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    Dim sMessage As String
    Dim sErrMsg As String
    Dim sErrNum As String
    Dim sErrDesc As String
    Dim sFunctionName As String
    
    On Error GoTo Catch
    
    ''''''''''''''''''''''''''
    ' Used For Error handling
    ''''''''''''''''''''''''''
    sFunctionName = "CreateGenericErrMsg"
    
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    ' Account for any additional messages supplied.  Substitute
    ' place holders with supplied informatoin.
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    If (sAddtlMsg <> "") Then
        sErrDescription = sErrDescription & " " & sAddtlMsg
    End If
    
    sMessage = gERRORMSGGENERIC
    sMessage = WorksheetFunction.Substitute(sMessage, "@ErrNum", sErrNumber)
    sMessage = WorksheetFunction.Substitute(sMessage, "@ErrDesc", sErrDescription)
    sMessage = WorksheetFunction.Substitute(sMessage, "@Module", sModule)
    sMessage = WorksheetFunction.Substitute(sMessage, "@Function", sFunction)
    
    CreateGenericErrMsg = sMessage
Exit Function

Catch:
    CreateGenericErrMsg = mModuleName & ":" & sFunctionName & vbCrLf & gGENERALERROR
End Function

Private Function DisplayMessage(ByVal sMessage As String, ByVal boxStyle As VbMsgBoxStyle, Optional ByVal sTitle As String)
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' DisplayMessage
' This function accepts message text, message box style and optional title.  It
' then calls a MsgBox or writes the information to the immediate window.
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    '''''''''''''''''''''''''''''''''
    ' If no title is provided
    ' set the title to "Information"
    '''''''''''''''''''''''''''''''''
    If (sTitle = "") Then
        sTitle = gINFORMATION
    End If
    
    '''''''''''''''''''''''''''''''''''
    ' Check Test Mode flag.  If false,
    ' display error in msgBox, else
    ' write to the Immediate window.
    '''''''''''''''''''''''''''''''''''
    If (gTestMode = False) Then
        DisplayMessage = MsgBox(sMessage, boxStyle, sTitle)
    Else
        Debug.Print sMessage
    End If
End Function
