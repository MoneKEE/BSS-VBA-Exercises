Attribute VB_Name = "modQuestion3"
'**************************************************************
' Question 3
'
' Revision History
' Date       Developer       Description
' 03-Nov-18  M Gore          Initial Version
'
' Use shdocvw.dll - MS Internet Control object to launch
' Windows Internet Explorer.  Navigate to Google.  Input
' the search text "Boston Software Systems" and click the
' Search Button.
'**************************************************************

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Error Message Templates
' These constants are used to standardize error message format
' throughout the module.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Private Const gERRORMSGGENERIC  As String = "@ErrDesc (@ErrNum) " & vbCrLf & "Module:@Module" & vbCrLf & "Function:@Function"
Private Const gERRORTEXT513     As String = "Could not launch Windows Internet Explorer."
Private Const gERRORTEXT514     As String = "Website did not respond with reasonable time."
Private Const gINFORMATION      As String = "Information"

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Test Mode flag
' For testing/debugging set gTestMode = True to print error message
' information to the Immediate Pane.  When False, error information
' is displayed in a message box.
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Private Const gTestMode As Boolean = True

Private Const mModuleName = "Question3"

Public Sub GoogleSearch(Optional ByVal sSearchVal As String)
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' GoogleSearch
' This sub launches a new Internet Explorer window and
' navigate to Google.  Once the page is loaded, set the
' search text to sSearchVal and click the search button.
' Search criteria is optional.  If sSearchVal is not
' passed then sSearchVal defaults to "Boston Software Systems".
'
' Required references:
' Microsoft HTML Object Library
' Microsoft Internet Controls
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    Dim oIE As SHDocVw.InternetExplorer
    Dim oSearchTxt As MSHTML.IHTMLInputElement
    Dim oSearchBtn As MSHTML.IHTMLElement
    Dim vTimeStart As Variant
    Dim vTimeStop As Variant
    Dim sFunctionName As String
    Dim sErrMsg As String
    Dim sErrNum As String
    Dim sErrDesc As String
    
    sFunctionName = "GoogleSearch"
    
    On Error GoTo Catch
    
    Set oIE = New InternetExplorer
    
    ''''''''''''''''''''''''''''''''''''''''
    ' If oIE is an Internet Explorer object
    ' then continue, else raise an error.
    ''''''''''''''''''''''''''''''''''''''''
    If oIE Is Nothing Then
        Err.Raise vbObjectError + 513, , gERRORTEXT513
    Else
        oIE.Visible = True
        oIE.Navigate ("www.Google.com")
    End If
    
    ''''''''''''''''''''''''''''''''''''''''''''''
    ' Allow time for IE to load all page elements.
    ' Time out after 10 seconds.
    ''''''''''''''''''''''''''''''''''''''''''''''
    vTimeStart = Now()
    While Not oIE.readyState = READYSTATE_COMPLETE Or oIE.Busy
        DoEvents
        
        vTimeStop = Now()
        If vTimeStop >= vTimeStart + TimeValue("00:00:10") Then
            Err.Raise vbObjectError + 514, , gERRORTEXT514
        End If
    Wend
    
    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    ' oSearchTxt represents input element name="q", the search text.
    ' oSearchBtn represents input element name="btnK", the search button.
    ' To take advantage of the click method oSearch is IHTMLElement,
    ' not IHTMLInputElement.
    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    Set oSearchTxt = oIE.Document.getElementsByName("q")(0)
    Set oSearchBtn = oIE.Document.getElementsByName("btnK")(0)
    
    '''''''''''''''''''''''''''''''''''''''''''''''
    ' If sSearchVal is empty, set search text value
    ' to "Boston Software Systems"
    '''''''''''''''''''''''''''''''''''''''''''''''
    If sSearchVal = "" Then
        oSearchTxt.Value = "Boston Software Systems"
    Else
        oSearchTxt.Value = sSearchVal
    End If
    
    '''''''''''''''''''''''''''''''''''''''''''''''
    ' Allow for execution of the search text value
    ' update. Wait one second.
    '''''''''''''''''''''''''''''''''''''''''''''''
    Application.Wait (Now() + TimeValue("00:00:01"))
    
    ''''''''''''''''''''''''''''''''''''''''
    ' Click search button to execute search
    ''''''''''''''''''''''''''''''''''''''''
    oSearchBtn.Click
    
    ''''''''''''''''''''''''''''''''''''''''''''''
    ' Allow time for IE to load all page elements.
    ' Time out after 10 seconds.
    ''''''''''''''''''''''''''''''''''''''''''''''
    vTimeStart = Now()
    While Not oIE.readyState = READYSTATE_COMPLETE Or oIE.Busy
        DoEvents
        
        vTimeStop = Now()
        If vTimeStop >= vTimeStart + TimeValue("00:00:10") Then
            Err.Raise vbObjectError + 514, , gERRORTEXT514
        End If
    Wend

    '''''''''''''''''''''
    ' Garbage Collection
    '''''''''''''''''''''
    Set oIE = Nothing
    
    Exit Sub
Catch:
    sErrNum = Err.Number
    sErrDesc = Err.Description
    sErrMsg = CreateGenericErrMsg(sErrNum, sErrDesc, mModuleName, sFunctionName)
    DisplayMessage sErrMsg, vbCritical
End Sub

Private Function CreateGenericErrMsg(sErrNumber As String, sErrDescription As String, sModule As String, sFunction As String, Optional sAddtlMsg As String) As String
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' CreateGenericErrMsg
' This function accepts the error number, the error description,
' the module and function where the error was raised, as well as
' the sheetname and additional information, if applicable.  It
' returns a formatted error message, ready for display.
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    Dim sMessage As String
    Dim sErrMsg As String
    Dim sErrNum As String
    Dim sErrDesc As String
    Dim sFunctionName As String
    
    On Error GoTo Catch
    
    ''''''''''''''''''''''''''
    ' Used For Error handling
    ''''''''''''''''''''''''''
    sFunctionName = "CreateGenericErrMsg"
    
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    ' Account for any additional messages supplied.  Substitute
    ' place holders with supplied informatoin.
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    If (sAddtlMsg <> "") Then
        sErrDescription = sErrDescription & " " & sAddtlMsg
    End If
    
    sMessage = gERRORMSGGENERIC
    sMessage = WorksheetFunction.Substitute(sMessage, "@ErrNum", sErrNumber)
    sMessage = WorksheetFunction.Substitute(sMessage, "@ErrDesc", sErrDescription)
    sMessage = WorksheetFunction.Substitute(sMessage, "@Module", sModule)
    sMessage = WorksheetFunction.Substitute(sMessage, "@Function", sFunction)
    
    CreateGenericErrMsg = sMessage
Exit Function

Catch:
    CreateGenericErrMsg = mModuleName & ":" & sFunctionName & vbCrLf & gGENERALERROR
End Function

Private Function DisplayMessage(ByVal sMessage As String, ByVal boxStyle As VbMsgBoxStyle, Optional ByVal sTitle As String)
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' DisplayMessage
' This function accepts message text, message box style and optional title.  It
' then calls a MsgBox or writes the information to the immediate window.
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    '''''''''''''''''''''''''''''''''
    ' If no title is provided
    ' set the title to "Information"
    '''''''''''''''''''''''''''''''''
    If (sTitle = "") Then
        sTitle = gINFORMATION
    End If
    
    '''''''''''''''''''''''''''''''''''
    ' Check Test Mode flag.  If false,
    ' display error in msgBox, else
    ' write to the Immediate window.
    '''''''''''''''''''''''''''''''''''
    If (gTestMode = False) Then
        DisplayMessage = MsgBox(sMessage, boxStyle, sTitle)
    Else
        Debug.Print sMessage
    End If
End Function
